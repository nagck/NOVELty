const searchByTitle=(a,b)=>{fetch(`/api/search/title/${a}`).then(a=>a.json()).then(a=>b(a)).catch(a=>console.log(a))},searchByAuthor=(a,b)=>{fetch(`/api/search/author/${a}`).then(a=>a.json()).then(a=>b(a)).catch(a=>console.log(a))},getBookInfoWorks=(a,b)=>{fetch(`/api/bookInfo/${a}`).then(a=>a.json()).then(a=>b(a))},getBookCover=a=>`http://covers.openlibrary.org/b/OLID/${a}-M.jpg?default=false`,shuffle=a=>{for(let b=a.length-1;0<b;b--){let c=Math.floor(Math.random()*(b+1)),d=a[b];a[b]=a[c],a[c]=d}return a},getRecommendation=a=>{Promise.all([fetch(`/api/recommendationUser/`),fetch(`/api/recommendationTD/`),fetch(`/api/recommendationNY/hardcover-fiction`)]).then(function(a){return Promise.all(a.map(function(a){return a.json()}))}).then(function(b){let c=[];for(let a=0;a<b.length;a++)b[a].forEach(a=>c.push(a));let d=[...new Set(c)];fetch(`/api/books/user`).then(a=>a.json()).then(b=>{let c=b.map(a=>a.Book.ISBN),e=d.filter(a=>-1===c.indexOf(a));a(shuffle(e).slice(0,Math.min(e.length,10)))})}).catch(function(b){console.log(b),a([])})},addBookToList=(a,b,c)=>{fetch(`/api/book`,{method:"POST",headers:{"content-type":"application/json",accept:"application/json"},body:JSON.stringify(a)}).then(()=>{fetch(`/api/book/${a.isbn}`).then(a=>a.json()).then(a=>{let d={id:a[0].id,favourite:!0,reading:b};fetch(`/api/book/user`,{method:"POST",headers:{"content-type":"application/json",accept:"application/json"},body:JSON.stringify(d)}).then(a=>a.json()).then(b=>{c(b,a)}).catch(a=>console.log(a))})})};module.exports={searchByTitle,searchByAuthor,getBookInfoWorks,getBookCover,getRecommendation,addBookToList};